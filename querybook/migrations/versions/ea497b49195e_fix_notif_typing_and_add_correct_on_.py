"""fix notif typing and add correct on delete

Revision ID: ea497b49195e
Revises: 1e3eb54fcb83
Create Date: 2021-03-28 06:23:02.548278

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "ea497b49195e"
down_revision = "1e3eb54fcb83"
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "data_table_column_statistics_ibfk_2",
        "data_table_column_statistics",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "data_table_column_statistics_ibfk_2",
        "data_table_column_statistics",
        "user",
        ["uid"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "data_table_query_execution_ibfk_1",
        "data_table_query_execution",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "data_table_query_execution_ibfk_1",
        "data_table_query_execution",
        "data_cell",
        ["cell_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "data_table_statistics_ibfk_2", "data_table_statistics", type_="foreignkey"
    )
    op.create_foreign_key(
        "data_table_statistics_ibfk_2",
        "data_table_statistics",
        "user",
        ["uid"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "favorite_data_doc_ibfk_1", "favorite_data_doc", type_="foreignkey"
    )
    op.create_foreign_key(
        "favorite_data_doc_ibfk_1",
        "favorite_data_doc",
        "data_doc",
        ["data_doc_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("query_engine_ibfk_2", "query_engine", type_="foreignkey")
    op.create_foreign_key(
        "query_engine_ibfk_2",
        "query_engine",
        "query_metastore",
        ["metastore_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_constraint("query_execution_ibfk_1", "query_execution", type_="foreignkey")
    op.create_foreign_key(
        "query_execution_ibfk_1",
        "query_execution",
        "query_engine",
        ["engine_id"],
        ["id"],
        ondelete="CASCADE",
    )

    if conn.dialect.name == "postgresql":
        op.execute(
            'ALTER TABLE query_execution_notification ALTER COLUMN "user" TYPE INTEGER USING ("user"::integer)'
        )
    else:
        op.alter_column(
            "query_execution_notification",
            "user",
            existing_type=sa.String(length=255),
            type_=sa.Integer(),
            existing_nullable=False,
        )
    op.create_foreign_key(
        "fk_query_execution_notification_user",
        "query_execution_notification",
        "user",
        ["user"],
        ["id"],
        ondelete="CASCADE",
    )

    op.drop_constraint(
        "query_execution_viewer_ibfk_1", "query_execution_viewer", type_="foreignkey"
    )
    op.create_foreign_key(
        "query_execution_viewer_ibfk_1",
        "query_execution_viewer",
        "user",
        ["created_by"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("query_snippet_ibfk_2", "query_snippet", type_="foreignkey")
    op.create_foreign_key(
        "query_snippet_ibfk_2",
        "query_snippet",
        "query_engine",
        ["engine_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade():

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("query_snippet_ibfk_2", "query_snippet", type_="foreignkey")
    op.create_foreign_key(
        "query_snippet_ibfk_2", "query_snippet", "query_engine", ["engine_id"], ["id"]
    )
    op.drop_constraint(
        "query_execution_viewer_ibfk_1", "query_execution_viewer", type_="foreignkey"
    )
    op.create_foreign_key(
        "query_execution_viewer_ibfk_1",
        "query_execution_viewer",
        "user",
        ["created_by"],
        ["id"],
    )

    op.drop_constraint(
        "fk_query_execution_notification_user",
        "query_execution_notification",
        type_="foreignkey",
    )
    op.alter_column(
        "query_execution_notification",
        "user",
        existing_type=sa.Integer(),
        type_=sa.String(length=255),
        existing_nullable=False,
    )

    op.drop_constraint("query_execution_ibfk_1", "query_execution", type_="foreignkey")
    op.create_foreign_key(
        "query_execution_ibfk_1",
        "query_execution",
        "query_engine",
        ["engine_id"],
        ["id"],
    )
    op.drop_constraint("query_engine_ibfk_2", "query_engine", type_="foreignkey")
    op.create_foreign_key(
        "query_engine_ibfk_2",
        "query_engine",
        "query_metastore",
        ["metastore_id"],
        ["id"],
    )
    op.drop_constraint(
        "favorite_data_doc_ibfk_1", "favorite_data_doc", type_="foreignkey"
    )
    op.create_foreign_key(
        "favorite_data_doc_ibfk_1",
        "favorite_data_doc",
        "data_doc",
        ["data_doc_id"],
        ["id"],
    )
    op.drop_constraint(
        "data_table_statistics_ibfk_2", "data_table_statistics", type_="foreignkey"
    )
    op.create_foreign_key(
        "data_table_statistics_ibfk_2", "data_table_statistics", "user", ["uid"], ["id"]
    )
    op.drop_constraint(
        "data_table_query_execution_ibfk_1",
        "data_table_query_execution",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "data_table_query_execution_ibfk_1",
        "data_table_query_execution",
        "data_cell",
        ["cell_id"],
        ["id"],
    )
    op.drop_constraint(
        "data_table_column_statistics_ibfk_2",
        "data_table_column_statistics",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "data_table_column_statistics_ibfk_2",
        "data_table_column_statistics",
        "user",
        ["uid"],
        ["id"],
    )
    # ### end Alembic commands ###
