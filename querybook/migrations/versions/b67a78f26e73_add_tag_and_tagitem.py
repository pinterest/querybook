"""Add Tag and TagItem

Revision ID: b67a78f26e73
Revises: f93d62f9a53d
Create Date: 2020-08-28 01:24:14.971175

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "b67a78f26e73"
down_revision = "f93d62f9a53d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tag_name"), "tag", ["name"], unique=True)
    op.create_table(
        "tag_item",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("tag_name", sa.String(length=255), nullable=False),
        sa.Column("table_id", sa.Integer(), nullable=True),
        sa.Column("uid", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["table_id"],
            ["data_table.id"],
            name="fk_tag_item_data_table",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_name"], ["tag.name"], name="fk_tag_item_tag", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["uid"], ["user.id"], name="fk_tag_item_user", ondelete="NO ACTION"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tag_item")
    op.drop_index(op.f("ix_tag_name"), table_name="tag")
    op.drop_table("tag")
    # ### end Alembic commands ###
